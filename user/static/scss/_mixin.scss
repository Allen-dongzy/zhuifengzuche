// 宽度容器
@mixin box-w($w:100%, $background:null) {
  width     : $w;
  box-sizing: border-box;
  @if ($background != null) {
    background: $background;
  }
}

// 高度容器
@mixin box-h($h:100%, $background:null) {
  height    : $h;
  box-sizing: border-box;
  @if ($background != null) {
    background: $background;
  }
}

// 自定义容器
@mixin box($w:100%, $h:100%, $background:null) {
  width     : $w;
  height    : $h;
  @if ($background != null) {
    background: $background;
  }
  box-sizing: border-box;
}

// 块级自定义容器
@mixin box-b($w:100%, $h:100%, $background:null) {
  display   : block;
  width     : $w;
  height    : $h;
  @if ($background != null) {
    background: $background;
  }
  box-sizing: border-box;
}

// 行内块自定义容器
@mixin box-i($w:100%, $h:100%, $background:null) {
  width     : $w;
  height    : $h;
  box-sizing: border-box;
  @if ($background != null) {
    background: $background;
  }
  display   : inline-block;
}

// 弹性盒子容器-居中
@mixin flex-center {
  display        : flex;
  justify-content: center;
  align-items    : center;
}

// 弹性盒子容器-row
@mixin flex-row($main:flex-start, $cross:center) {
  display        : flex;
  justify-content: $main;
  align-items    : $cross;
}

// 弹性盒子-换行
@mixin flex-wrap {
  @include flex-row();
  flex-wrap: wrap;
}

// 弹性盒子容器-col
@mixin flex-col($main:center, $cross:center) {
  display        : flex;
  flex-direction : column;
  justify-content: $main;
  align-items    : $cross;
}

// 文本超出隐藏-单行
@mixin text-one {
  display      : block;
  text-overflow: ellipsis;
  overflow     : hidden;
  white-space  : nowrap; // 强制不换行
}

// 文本超出隐藏-多行
@mixin text-hide($n:2) {
  display           : -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
  overflow          : hidden;
  text-overflow     : ellipsis;
  word-break        : break-all; // 断字点换行
  word-wrap         : break-word // 以防万一，强制换行
}

// 保留文本格式(比如多空格)
@mixin text-reserve {
  white-space: pre-wrap;
}

// 文本两端对齐
@mixin text-both {
  text-align:justify;
  text-justify:inter-ideograph;
}

// 文字属性设置
@mixin font-set($size:inherit, $color:rgba(0,0,0,0), $weight:normal) {
  font-size: $size;
  @if ($color != rgba(0,0,0,0)) {
    color: $color;
  }
  @if ($weight != normal) {
    font-weight: $weight;
  }
}

// 当前元素无法选中（pc乱点不会出现蓝色的背景块，移动不能长按选中）
@mixin sel-hide {
  -moz-user-select   : none;
  -webkit-user-select: none;
  -ms-user-select    : none;
  -khtml-user-select : none;
  user-select        : none;
}

// 细线-水平
@mixin border-w($c: #ddd, $n: .5) {
  width           : 100%;
  height          : 1px;
  background      : $c;
  color           : $c;
  transform-origin: 0 0;
  transform       : scaleX($n);
}

// 细线-垂直
@mixin border-h($c: #ddd, $n: .5) {
  width           : 1px;
  height          : 100%;
  background      : $c;
  color           : $c;
  transform-origin: 0 0;
  transform       : scaleY($n);
}

// 方块
@mixin square($w:100%, $background:null) {
  @include box($w, $w, $background);
}

// 圆形
@mixin circle($w:100%, $background:null) {
  @include square($w, $background);
  border-radius: 50%;
}

// 设置placeholder颜色
@mixin placeholder($c: #ddd) {
  input::-webkit-input-placeholder {
    color: $c;
  }
  input::-moz-input-placeholder {
    color: $c;
  }
  input::-ms-input-placeholder {
    color: $c;
  }
}

// 遮罩-定位(fixed优先)
@mixin mask($opa:.6, $index:99) {
  position: fixed;
  top     : 0;
  left    : 0;
  z-index : $index;
  @include square();
  background: rgba(0, 0, 0, $opa);
}

//二维居中-定位(absolute优先)
@mixin cross($position:absolute, $index:9) {
  position : $position;
  top      : 50%;
  left     : 50%;
  z-index  : $index;
  transform: translateX(-50%) translateY(-50%);
}

//上方-定位(absolute优先)
@mixin top($offset:0, $position:absolute, $index:9) {
  position: $position;
  top     : $offset;
  left    : 50%;
  z-index : $index;
  @if ($position==absolute) {
    transform: translateX(-50%);
  }
  @if ($position==fixed) {
    transform: translateX(-50%);
  }
}

//下方-定位(absolute优先)
@mixin bottom($offset:0, $position:absolute, $index:9) {
  position: $position;
  bottom  : $offset;
  left    : 50%;
  z-index : $index;
  @if ($position==absolute) {
    transform: translateX(-50%);
  }
  @if ($position==fixed) {
    transform: translateX(-50%);
  }
}

//左侧-定位(absolute优先)
@mixin left($offset:0, $position:absolute, $index:9) {
  position: $position;
  top     : 50%;
  left    : $offset;
  z-index : $index;
  @if ($position==absolute) {
    transform: translateY(-50%);
  }
  @if ($position==fixed) {
    transform: translateY(-50%);
  }
}

//右侧-定位(absolute优先)
@mixin right($offset:0, $position:absolute, $index:9) {
  position : $position;
  top      : 50%;
  right    : $offset;
  z-index  : $index;
  @if ($position==absolute) {
    transform: translateY(-50%);
  }
  @if ($position==fixed) {
    transform: translateY(-50%);
  }
}

// 左上方(absolute优先)
@mixin left-top($left:0, $top:0, $position:absolute, $index:9) {
  position: $position;
  left    : $left;
  top     : $top;
  z-index : $index;
}

// 右上方(absolute优先)
@mixin right-top($right:0, $top:0, $position:absolute, $index:9) {
  position: $position;
  right   : $right;
  top     : $top;
  z-index : $index;
}

// 左下方(absolute优先)
@mixin left-bottom($left:0, $bottom:0, $position:absolute, $index:9) {
  position: $position;
  left    : $left;
  bottom  : $bottom;
  z-index : $index;
}

// 下右方(absolute优先)
@mixin right-bottom($right:0, $bottom:0, $position:absolute, $index:9) {
  position: $position;
  right   : $right;
  bottom  : $bottom;
  z-index : $index;
}